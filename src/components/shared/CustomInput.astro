---
const { value, noGradients } = Astro.props;
---

<script>
  const copyToClipboard = async (text:string) => {
    if ('clipboard' in navigator) {
      return await navigator.clipboard.writeText(text);
    } else {
      return document.execCommand('copy', true, text);
    }
  };

  document.addEventListener('click', async (e) => {
    const target = e.target as HTMLElement;
    if (target && target.classList.contains('copy_btn')) {
      const value = target.dataset.value;
      if (value) {
        await copyToClipboard(value);
        alert('Copied to clipboard')
      }
    }
  });
</script>

<div class={`input_box ${noGradients ? "no_gradient" : ''}`}>
  <div class="gradient_input">
    <div class="input">
      <span>CA:</span>
      <div class="value">
        {value}
      </div>
    </div>
  </div>
  <button class="copy_btn" data-value={value}>Copy</button>
</div>

<style lang="scss">

  .input_box {
    height: 4rem;
    justify-content: center;
    display: flex;
    width: 100%;
    margin-inline:auto;
    box-sizing: border-box;

    @media (min-width:$screen-sm-min) {
      height: 4.8rem;
    }

      &.no_gradient {
        border: 1px solid #FEAB67;
        border-radius: 0.8rem;
        height: 4.8rem;

        @media (min-width:$screen-sm-min) {
          height: 6rem;
        }
        .gradient_input {
          background: none;

          .input {
            background: #1F1F1F;
            font-size: 2rem;
            gap: 0.8rem;

            color: #666;

            .value {
              color: #FAFAFA;
            }
          }
        }
        .copy_btn {
          background: #1F1F1F;
          color: #FD770A;
          border:none;

          transition: all 0.2s ease;

          &:hover {
            background: #FD770A;
            color: #1F1F1F;
          }
        }
      }

    .gradient_input {
      width: 100%;
      height: 100%;
      border-top-left-radius: 0.8rem;
      border-bottom-left-radius: 0.8rem;
      padding: 0.1rem;
      padding-right: 0;
      background: linear-gradient(90.48deg, #FD8F35 0.42%, #2F2F2F 66.03%);
      z-index: -2;

      .input {
        position: relative;
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 0 1.4rem;
        border-top-left-radius: 0.8rem;
        border-bottom-left-radius: 0.8rem;
        height: 100%;
        background: linear-gradient(to right, rgba(247, 118, 12, 0.2) 0%, rgba(117, 57, 8, 0) );

        color: #FD8F35;

        font-size: 1.4rem; 
        line-height: 2rem;

        // background for gradient input
        &::before {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: #222;
          z-index: -1;
          border-top-left-radius: 0.8rem;
          border-bottom-left-radius: 0.8rem;
        }


        .value {
          display: -webkit-box;
          -webkit-line-clamp: 1;
          -webkit-box-orient: vertical;
          text-overflow: ellipsis;
          overflow: hidden;
          word-break: break-all;
        }
      }
    }
    .copy_btn {
      display: flex;
      justify-content: center;
      align-items: center;
      background: #CCC;
      height: 100%;
      padding: 0 1.8rem;
      border-top-right-radius: 0.8rem;
      border-bottom-right-radius: 0.8rem;
      border: 1px solid #CCC;

      font-size: 1.4rem;
      line-height: 2rem;
      font-weight: 600;

        transition: all 0.2s ease;

      &:hover {
        background: #FD770A;
        color: #1F1F1F;
        border-color: #FD770A;
      }
    }
  }


</style>